;; ************************************************************************** ;;
;;                                                                            ;;
;;                                                        :::      ::::::::   ;;
;;   orthodox_canonical_form                            :+:      :+:    :+:   ;;
;;                                                    +:+ +:+         +:+     ;;
;;   By: iqabbal <iqabbal@student.42.fr>            +#+  +:+       +#+        ;;
;;                                                +#+#+#+#+#+   +#+           ;;
;;   Created: 2023/02/12 03:26:02 by iqabbal           #+#    #+#             ;;
;;   Updated: 2023/02/12 04:15:08 by iqabbal          ###   ########.fr       ;;
;;                                                                            ;;
;; ************************************************************************** ;;



حسنا، سأشرح لك عن الشكل الكانوني الأرثوذكسي في برمجة الأوبجيكت بلغة C++.

في برمجة الأوبجيكت، يمكن إنشاء "كلاس" لتخزين البيانات والعمل معها. وكلاس الشكل الكانوني الأرثوذكسي هو 

نوع من هذه الكلاسات الخاصة بتنظيم البيانات بشكل أسهل وأثبت.

للإنشاء كلاس الشكل الكانوني الأرثوذكسي، يجب إنشاء عدة عناصر خاصة به، مثل:

المصمم الأصلي: يستخدم لإنشاء كائن جديد من الكلاس.

المصمم النسخ: يستخدم لإنشاء نسخة من كائن موجود من الكلاس.

المعامل التعيين: يستخدم لتعيين قيمة للكائن من الكلاس.

المدمج التدمير: يستخدم لحذف كائن من الكلاس عند لم يعد هناك أي إشارة إليه.

هذه العناصر يمكن أن تساعد في تنظيم البيانات وحمايتها والحفاظ على أداء البرنامج جيد.

كما يمكن للأطفال أن يتخيلوا أنهم يخزنون عدة شجرات في حديقة. كل شجرة تحتوي على عدد من الفاكهة.







حسنا، سأشرح لك كيف يساعدك تلك الميزات في حماية البيانات الخاصة بك:

المصمم الأصلي: عند إنشاء كائن جديد من الكلاس، يتم إعطاء الكائن قيمة بشكل آلي ومعين. هذا يحمي البيانات الخاصة بك من أي تعديلات عشوائية أو خطأ.

المصمم النسخ: عند إنشاء نسخة من كائن موجود، يتم الحفاظ على البيانات الأصلية للكائن دون أي تغيير في هذه البيانات. هذا يضمن أن البيانات الأصلية ستبقى أمانة ولا تخطأ عند استخدام النسخة.

المعامل التعيين: عند تعيين قيمة للكائن، يتم التأكد من أن القيمة الجديدة صحيحة ومناسبة للكائن. هذا يحمي البيانات الخاصة بك من أي خطأ أو تعديل غير صحيح.

المدمج التدمير: عندما لا تعد هناك أي إشارة إلى الكائن، يتم حذف الكائن تلقائيا. هذا يضمن أن تنفيذ البرنامج لا يتأثر بأي بيانات خاطئة أو مهملة.

هذه الميزات تضمن أن البيانات الخاصة بك ستبقى



---------------this under is another of above-----------------------------



حسناً، سأشرح لك عن طريقة عمل الميزات المذكورة في الشكل الكانوني الأرثوذكسي في حماية بياناتك.

المصمم الأصلي: يضمن إنشاء كائن جديد من الكلاس بشكل صحيح وتأكد من أن جميع البيانات المحددة ستكون موجودة وجاهزة للاستخدام عند الحاجة.

المصمم النسخ: يضمن إنشاء نسخة صحيحة من الكائن الحالي حتى لا تؤثر على البيانات الأصلية ويمكن للبرنامج استخدام نسختين من نفس البيانات بدون الخطأ.

المعامل التعيين: يضمن تعيين القيم بشكل صحيح دون أي خطأ ويحمي البيانات الأصلية من التغييرات غير المرغوب فيها.

المدمج التدمير: يضمن حذف الكائنات عندما لم يعد هناك أي إشارة إليها، وبالتالي يحمي الذاكرة من التلف ويضمن أداء جيد للبرنامج.

بالإضافة إلى ذلك، يمكن أن تستخدم كل من هذه الميزات لضمان أن البيانات تظل آمنة وأن البرنامج يعمل بشكل جيد وأن الذاكرة تستخدم بشكل




تحتاج إلى إنشاء مصمم نسخ ومعامل التعيين عندما تريد الحفاظ على بيانات الكائن عند إنشائها أو عند تعيين بيانات آخر إليه. الإعداد الافتراضي للمصمم النسخ والمعامل التعيين لا يضمن تعيين البيانات بشكل صحيح ولا يضمن الحفاظ على بيانات الكائن بشكل صحيح، إذا لم تؤدي إلى تعيين بيانات آخر إلى الكائن بشكل صحيح، فيمكن أن تحدث أخطاء في البيانات المخزنة في الكائن.

على سبيل المثال، لو كان لدينا كائن من كلاس الكعكة، نحن نريد تعيين البيانات إلى كائن آخر من نفس الكلاس. إذا لم نؤدي إلى إنشاء مصمم نسخ ومعامل التعيين، فسيتم تعيين العنوان الذي يشير إلى الكائن الأصلي وليس البيانات الخاصة به. بالتالي، فإذا قمنا بتغيير الكائن الآخر، فسيتم تغيير الكائن الأصلي أيضًا وليس البيانات الخاصة به.

لذلك، فهو مهم جدًا أن نؤدي إلى إنشاء مصمم نسخ ومعامل التعيين للحفاظ على بيا